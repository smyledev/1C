#Область ЗагрузкаИзExcel

&НаКлиенте
Процедура ЗагрузитьExcelВТабличнуюЧасть(Команда)  
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = "Выберите файл excel для загрузки в табличную часть";
	ДиалогОткрытияФайла.Фильтр = "Файл данных (*.xls, *.xlsx)|*.xls;*.xlsx";
	ДиалогОткрытияФайла.Расширение = "xlsx, xls";
	
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		Файл = Новый ДвоичныеДанные(ДиалогОткрытияФайла.ПолноеИмяФайла);
		Адрес = ПоместитьВоВременноеХранилище(Файл, ЭтаФорма.УникальныйИдентификатор);
		ПодготовитьТаблицуСДанными(Адрес, СтрРазделить(ДиалогОткрытияФайла.ПолноеИмяФайла,"\",Ложь)[СтрРазделить(ДиалогОткрытияФайла.ПолноеИмяФайла,"\",Ложь).Количество() - 1]);
	КонецЕсли;  
	
КонецПроцедуры


Функция ПодготовитьТаблицуСДанными(ФайлВХранилище, ИмяФайла)
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(ФайлВХранилище);
	
	тПуть = КаталогВременныхФайлов() + ИмяФайла;
	ДвоичныеДанные.Записать(тПуть);
	
	MXL = Новый ТабличныйДокумент;
	Попытка
		MXL.Прочитать(тПуть, СпособЧтенияЗначенийТабличногоДокумента.Значение);
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
	КонецПопытки;	
	
КонецФункции 

&НаКлиенте
Процедура ОбработкаMXL(Команда)
	ОбработкаMXLНаСервере();
КонецПроцедуры

Функция ПолучитьВидВремени(ЗначениеВидаВремени)  
	Если ЗначениеВидаВремени = "B" Тогда 
		Возврат	 Справочники.ВидыИспользованияРабочегоВремени.Праздники;
	ИначеЕсли ЗначениеВидаВремени = "İ" Тогда 
		Возврат Справочники.ВидыИспользованияРабочегоВремени.ВыходныеДни;
	ИначеЕсли ЗначениеВидаВремени = "H" Тогда
		Возврат Справочники.ВидыИспользованияРабочегоВремени.НайтиПоНаименованию("Траур");
	ИначеЕсли ЗначениеВидаВремени = "E" Тогда
		Возврат Справочники.ВидыИспользованияРабочегоВремени.Командировка;
	ИначеЕсли ЗначениеВидаВремени = "M" Тогда
		Возврат Справочники.ВидыИспользованияРабочегоВремени.НайтиПоНаименованию("Отпуск");
	ИначеЕсли ЗначениеВидаВремени = "ÖM" Тогда
		Возврат Справочники.ВидыИспользованияРабочегоВремени.НайтиПоНаименованию("Отпуск неоплачиваемый в соответствии с законом");
	ИначеЕсли ЗначениеВидаВремени = "S" Тогда
		Возврат Справочники.ВидыИспользованияРабочегоВремени.НайтиПоНаименованию("День выбора"); 
	Иначе Возврат Неопределено;
	КонецЕсли;	
КонецФункции

Процедура ОбработкаMXLНаСервере()
	ПЗ = Новый ПостроительЗапроса;
	ПЗ.ИсточникДанных = Новый ОписаниеИсточникаДанных(MXL.Область("R" + Формат(2,"ЧГ=0") + "C1:R" + Формат(MXL.ВысотаТаблицы,"ЧГ=0") + "C" + Формат(MXL.ШиринаТаблицы,"ЧГ=0")));  
	ПЗ.ДобавлениеПредставлений = ТипДобавленияПредставлений.НеДобавлять;
	ПЗ.ЗаполнитьНастройки();
	ПЗ.Выполнить();
	ТЗ = ПЗ.Результат.Выгрузить();
	ЗапросСДаннымиExcelИСотрудникиСФинами = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеExcel.*
	|ПОМЕСТИТЬ ВТДанныеExcel
	|ИЗ
	|	&ДанныеExcel КАК ДанныеExcel
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанныеExcel.*,
	|	Сотрудники.Ссылка КАК СсылкаСотрудникаПоФИН,
	| Сотрудники.ФизическоеЛицо.Ссылка КАК ФизическоеЛицо
	|ИЗ
	|	ВТДанныеExcel КАК ВТДанныеExcel
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО ВТДанныеExcel.FİN = Сотрудники.ФизическоеЛицо.ФИН");
	
	ЗапросСДаннымиExcelИСотрудникиСФинами.УстановитьПараметр("ДанныеExcel", ТЗ);
	ТЗДополненное = ЗапросСДаннымиExcelИСотрудникиСФинами.Выполнить().Выгрузить();                                              
	Объект.ДанныеОВремени.Очистить();
	Объект.ФизическиеЛица.Очистить();
	
	Сотрудник = Неопределено;
	ВидВремени = Неопределено;
	ЗначениеВидаВремени= Неопределено;
	
	Для Каждого Стр Из ТЗДополненное Цикл
		Если Стр.FİN <> "" Тогда
			КоличествоДней = День(КонецМесяца(Объект.ДатаОкончанияПериода));
			Сотрудник = Стр.СсылкаСотрудникаПоФИН;
			Если ЗначениеЗаполнено(Сотрудник) Тогда
				СтрН = Объект.ДанныеОВремени.Добавить();
				СтрФ = Объект.ФизическиеЛица.Добавить();
				СтрФ.ФизическоеЛицо = Стр.ФизическоеЛицо; 
				
				Для Gün = 1 По КоличествоДней Цикл
					СтрН.Сотрудник = Сотрудник;
					ЗначениеВидаВремени = Стр["Gün" + Gün];
					
					Если ТипЗнч(ЗначениеВидаВремени) = Тип("Число") Тогда 
						ВидВремени = Справочники.ВидыИспользованияРабочегоВремени.Явка;
						Часов = ЗначениеВидаВремени;
					Иначе 
						ВидВремени = ПолучитьВидВремени(ЗначениеВидаВремени);
						Часов = 0;
					КонецЕсли;      
					
					СтрН["Часов" + Gün] = Часов;
					СтрН["ВидВремени" + Gün] = ВидВремени;
					
				КонецЦикла;     
				
			Иначе 
				Сообщить("Fin kod üzrə əməkdaş tapılmadı: " + Стр.FİN, СтатусСообщения.Внимание);
			КонецЕсли;
		КонецЕсли; 
		
	КонецЦикла;
	
	УчетРабочегоВремениРасширенныйФормы.ТабельПриЧтенииНаСервере(ЭтаФорма);
КонецПроцедуры

#КонецОбласти
