// ilia, optima
#Область ЗагрузкаИзExcel

&НаКлиенте
Процедура ЗагрузитьExcelВТабличнуюЧасть(Команда)    
		
 	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = "Выберите файл excel для загрузки в табличную часть";
	ДиалогОткрытияФайла.Фильтр = "Файл данных (*.xls, *.xlsx)|*.xls;*.xlsx";
	ДиалогОткрытияФайла.Расширение = "xlsx, xls";
	
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ВыбранныеФайлы = ДиалогОткрытияФайла.ВыбранныеФайлы;
		Если ЗначениеЗаполнено(ВыбранныеФайлы) И ВыбранныеФайлы.Количество() > 0 Тогда 
			ПутьКФайлу = ВыбранныеФайлы[0];
			ФайлДляВыгрузки = Новый Файл(ПутьКФайлу);
			Если ФайлДляВыгрузки.Существует() Тогда 
				Excel = Новый COMОбъект("Excel.Application");
				Книга = Excel.Workbooks.Open(ПутьКФайлу); 
				
				Лист = Книга.Sheets(1);
				КоличествоСтрок = Лист.Cells(1, 1).SpecialCells(11).Row;
				КоличествоКолонок = Лист.Cells(1, 1).SpecialCells(11).Column;
				
				ДанныеExcel.Очистить();
				
				ИменаКолонок = ПолучитьИменаКолонок();
				
				ПроцентВыполнения = 1;    
				//КоличествоСтрок = 10;
				Для НомерСтроки = 3 По КоличествоСтрок Цикл 
					Нстр = ДанныеExcel.Добавить();
					Для НомерКолонки = 1 По ИменаКолонок.Количество() Цикл
						ЗначениеВЯчейке = Лист.Cells(НомерСтроки, НомерКолонки).Value;
						Нстр[ИменаКолонок[НомерКолонки - 1]] = ЗначениеВЯчейке;     
						ПроцентВыполнения = Цел((НомерСтроки - 2) * 100 / КоличествоСтрок);
						Состояние("Загрузка из excel", ПроцентВыполнения, "Операция выполняется");
					КонецЦикла;
				КонецЦикла;
				
				ТекСтрока = 1; 
				НайденныеСотрудникиExcel = ПолучитьСотрудниковВExcelПоНаименованиюИлиФИН();
				Для Каждого ДанныеОВремениСотрудника Из Объект.ДанныеОВремени Цикл
					СтрокаИзExcel = ПолучитьСотрудникаВExcelПоНаименованиюИлиФИН(НайденныеСотрудникиExcel, ДанныеОВремениСотрудника.Сотрудник);
					Если ЗначениеЗаполнено(СтрокаИзExcel) Тогда
						ПроцентВыполнения = Цел(ТекСтрока * 100 / НайденныеСотрудникиExcel.Количество());
						ЗаполнитьДаннымиРаботыСотрудника(ДанныеОВремениСотрудника, СтрокаИзExcel);
						Состояние("Выполнение обновления", ПроцентВыполнения, "Операция выполняется");
						ТекСтрока = ТекСтрока + 1;
					КонецЕсли
				КонецЦикла;

				Книга.Close();
				Excel.Quit(); 
				
				Сообщить("Обновление завершено");
				
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры   

Функция ВыгрузитьДанныеExcel()
	Возврат ДанныеExcel.Выгрузить();
КонецФункции


Функция ПолучитьСотрудниковВExcelПоНаименованиюИлиФИН()
	СотрудникиExcelНайденные = Новый Массив;  
	Сотрудники = Объект.ДанныеОВремени.Выгрузить(, "Сотрудник");
	Для Каждого СтрокаИзExcel Из ДанныеExcel Цикл
		Если ЗначениеЗаполнено(Сотрудники.Найти(ПолучитьСотрудникаПоФИОИлиФИН(СтрокаИзExcel["ФИО"], СтрокаИзExcel["FIN"]))) Тогда
			ИменаКолонок = ПолучитьИменаКолонок();  
			ДанныеПоСотруднику = Новый Соответствие;
			Для Каждого Колонка Из ИменаКолонок Цикл
				ДанныеПоСотруднику.Вставить(Колонка, СтрокаИзExcel[Колонка]);
			КонецЦикла;
			СотрудникиExcelНайденные.Добавить(ДанныеПоСотруднику); 
		КонецЕсли
	КонецЦикла;
	Возврат СотрудникиExcelНайденные;
КонецФункции 

&НаКлиенте
Функция ПолучитьСотрудникаВExcelПоНаименованиюИлиФИН(ДанныеExcel, Сотрудник)
	Для Каждого СтрокаИзExcel Из ДанныеExcel Цикл
		Если Сотрудник = ПолучитьСотрудникаПоФИОИлиФИН(СтрокаИзExcel["ФИО"], СтрокаИзExcel["FIN"]) Тогда
			Возврат СтрокаИзExcel;
		КонецЕсли
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

Функция ПолучитьСотрудникаПоФИОИлиФИН(ФИО, FIN)
	СотрудникНайденный = Справочники.Сотрудники.НайтиПоНаименованию(ФИО);  
	Если Не ЗначениеЗаполнено(СотрудникНайденный) Тогда
		СотрудникНайденный = ПолучитьСотрудникаПоФИН(FIN);	 
	КонецЕсли;
	Возврат СотрудникНайденный;
КонецФункции  

Функция ПолучитьСотрудникаПоФИН(FIN)
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ФизЛицо
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.ФИН = &FIN
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеСотрудникиФизическихЛиц.Сотрудник КАК Сотрудник
	|ИЗ
	|	РегистрСведений.ОсновныеСотрудникиФизическихЛиц КАК ОсновныеСотрудникиФизическихЛиц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ФизЛицо КАК ФизЛицо
	|		ПО ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо = ФизЛицо.Ссылка"); 
	Запрос.УстановитьПараметр("FIN", FIN);
	Результат = Запрос.Выполнить().Выгрузить(); 
	Если Результат.Количество() > 0 Тогда
		Возврат Результат[0].Сотрудник;	
	КонецЕсли;
	Возврат Неопределено;
КонецФункции


&НаКлиенте
Процедура ЗаполнитьДаннымиРаботыСотрудника(ДанныеОВремениСотрудника, СтрокаИзExcel)
	
	Если ДанныеОВремениСотрудника.ЭтоПерваяСтрокаПоСотруднику Тогда
		ВидыВремени = "";
		ДеньНомер = "";
		Для Счетчик = 1 По День(КонецМесяца(Объект.ДатаНачалаПериода)) Цикл 
			ВидыВремени = "ВидВремени" + Счетчик;  
			ДеньНомер = "День" + Счетчик;
			ДанныеОВремениСотрудника[ВидыВремени] = ПолучитьВидВремени(СтрокаИзExcel[ДеньНомер]);
		КонецЦикла;
		
		ЧасыПредставление = "";
		ДеньНомер = "";
		Для Счетчик = 1 По День(КонецМесяца(Объект.ДатаНачалаПериода)) Цикл 
			ЧасыПредставление = "Часов" + Счетчик;  
			ДеньНомер = "День" + Счетчик;  
			Попытка 
				Если ТипЗнч(Число(СтрокаИзExcel[ДеньНомер])) = Тип("Число") Тогда
					ДанныеОВремениСотрудника[ЧасыПредставление] = СтрокаИзExcel[ДеньНомер];  
				КонецЕсли;
			Исключение
			КонецПопытки;
		КонецЦикла;
		
		ВремяПредставление = "";
		ДеньНомер = "";
		Для Счетчик = 1 По День(КонецМесяца(Объект.ДатаНачалаПериода)) Цикл 
			ВремяПредставление = "Время" + Счетчик + "Представление";  
			ДеньНомер = "День" + Счетчик;                     
			ВремяПолученное = ПолучитьВидВремени(СтрокаИзExcel[ДеньНомер]);
			ДанныеОВремениСотрудника[ВремяПредставление] = ВремяПолученное;
		КонецЦикла;
		ДанныеОВремениСотрудника.ВремяИтог = "Я " + СтрокаИзExcel["РабочихДней"] + " д. " + СтрокаИзExcel["РабочихЧасовЗаМесяц"] + " ч.";
		
	Иначе    
		Праздники = 0;
		Выходные = 0;
		ДеньНомер = "";
		Для Счетчик = 1 По День(КонецМесяца(Объект.ДатаНачалаПериода)) Цикл 
			ДеньНомер = "День" + Счетчик;                     
			ВремяПолученное = ПолучитьВидВремени(СтрокаИзExcel[ДеньНомер]);
			Если ВремяПолученное = "ПР" Тогда
				Праздники = Праздники + 1;	
			ИначеЕсли ВремяПолученное = "В" Тогда
				Выходные = Выходные + 1;
			КонецЕсли;
		КонецЦикла;
		ДанныеОВремениСотрудника.ВремяИтог = "ПР " + Праздники + " д. " + Символы.ПС + "В " + Выходные + " д.";
	КонецЕсли;
	
КонецПроцедуры


Функция ПолучитьИменаКолонок()
	
	ИменаКолонок = Новый Массив(); 
	
	ИменаКолонок.Добавить("Номер");
	ИменаКолонок.Добавить("ФИО");
	ИменаКолонок.Добавить("FIN");
	ИменаКолонок.Добавить("Должность");
	ИменаКолонок.Добавить("Подразделение");
	ИменаКолонок.Добавить("ДатаПриемаНаРаботу");
	ИменаКолонок.Добавить("ДатаУвольнения");  
	ИменаКолонок.Добавить("ДатаИзменениеДолжности");  
	
	Для Счетчик = 1 По День(КонецМесяца(Объект.ДатаНачалаПериода)) Цикл
		ИменаКолонок.Добавить("День" + Счетчик);
	КонецЦикла;

	ИменаКолонок.Добавить("РабочихДней");
	ИменаКолонок.Добавить("РабочихЧасовЗаМесяц");

	Возврат ИменаКолонок;
	
КонецФункции   

&НаСервере  
Процедура ТабельЗаполнитьДанныеПоСотрудникам(Сотрудник, МассивСотрудников)   
	СтрокиПоСотрудникам = Новый Соответствие;
	СтрокиПоСотрудникам.Вставить(Сотрудник, Объект.ДанныеОВремени.НайтиСтроки(Новый Структура));
	УчетРабочегоВремениРасширенныйФормы.ТабельЗаполнитьДанныеПоСотрудникам(ЭтаФорма, МассивСотрудников, СтрокиПоСотрудникам);
КонецПроцедуры

Функция ПолучитьВидВремени(ВидВремени)  
	ВидВремени = СокрЛП(ВидВремени);
	Попытка 
		Если ТипЗнч(Число(ВидВремени)) = Тип("Число") Тогда
			Возврат Справочники.ВидыИспользованияРабочегоВремени.Явка.БуквенныйКод + " " + ВидВремени;
		КонецЕсли;
	Исключение
		Если ВидВремени = "B" Тогда 
			Возврат Справочники.ВидыИспользованияРабочегоВремени.Праздники.БуквенныйКод;
			
		ИначеЕсли ВидВремени = "İ" Тогда 
			Возврат Справочники.ВидыИспользованияРабочегоВремени.ВыходныеДни.БуквенныйКод;
			
		ИначеЕсли ВидВремени = "H" Тогда
			Возврат Справочники.ВидыИспользованияРабочегоВремени.НайтиПоНаименованию("Траур").БуквенныйКод;
			
		ИначеЕсли ВидВремени = "E" Тогда
			Возврат Справочники.ВидыИспользованияРабочегоВремени.Командировка.БуквенныйКод;
			
		ИначеЕсли ВидВремени = "M" Тогда
			Возврат Справочники.ВидыИспользованияРабочегоВремени.НайтиПоНаименованию("Отпуск").БуквенныйКод;
			
		ИначеЕсли ВидВремени = "ÖM" Тогда
			Возврат Справочники.ВидыИспользованияРабочегоВремени.НайтиПоНаименованию("Отпуск неоплачиваемый в соответствии с законом").БуквенныйКод;
			
		ИначеЕсли ВидВремени = "S" Тогда
			Возврат Справочники.ВидыИспользованияРабочегоВремени.НайтиПоНаименованию("День выбора").БуквенныйКод;    
			
		Иначе Возврат "";
			
		КонецЕсли;
		
	КонецПопытки;
КонецФункции

#КонецОбласти
